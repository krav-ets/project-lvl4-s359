- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  form(action= url method= isStandart ? method : 'post')
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, label = property, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const isInvalid = f.errors[property] ? ' is-invalid' : ''
  .form-group
    label= label
    input(name=getInputName(f, property) class=`form-control${isInvalid}` type=options['as'] value=`${value}`)
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(value = 'Save', bClass = 'success' , type = 'submit')
  .form-group
    input(class=`btn btn-${bClass}` type=`${type}` value= value)
